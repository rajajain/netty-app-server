apply plugin: 'java'
sourceCompatibility = 1.7
version = '1.0'


def environment = System.properties['env']
if (environment == null || "".equals(environment)) {
    environment = "config/dev"
} else {
    environment = "config/" + environment
}
sourceSets {
    main.java.srcDir "src"
    main.resources.srcDir environment

}

apply plugin: 'maven'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: "io.spring.dependency-management"
apply plugin: 'application'


buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.0.RELEASE")
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    maven { url "http://repo.spring.io/snapshot" }
    maven { url "http://repo.spring.io/milestone" }
}

dependencies {
    compile('org.apache.commons:commons-lang3:3.3.2')
    compile('io.netty:netty-all:4.0.33.Final')
    compile('commons-collections:commons-collections:3.2.2')
    compile("org.springframework.boot:spring-boot-starter-web:1.3.0.RELEASE") {
        exclude module: "spring-boot-starter-tomcat"
        exclude module: "servlet-api"
//        exclude module: "spring-web"
        exclude module: "spring-webmvc"
    }
    compile("org.apache.mahout:mahout-core:0.9")
    compile("com.googlecode.json-simple:json-simple:1.1.1")

}

artifacts {
    archives jar
}

task listJars << {
    configurations.compile.each { File file -> println file.name }
}

def getClasspathStringJars() {
    def baseFolder = ""
    def fileNames = []
    configurations.compile.each { File file -> fileNames.add(baseFolder + !file.name.startsWith('spring-web') ? file.name : "") }

    def classpath = fileNames.join(";")
    return classpath
}

jar {
    //
    def classpath = '. ; ' + getClasspathStringJars() + ' ; '

    manifest.attributes('Implementation-Title': 'io-netty-4',
            'Implementation-Version': version,
            'Main-Class': 'netty.HttpHelloWorldServer',
            'Class-Path': classpath)

    exclude 'org.springframework:spring-web:4.2.3-RELEASE'

}

task start(type: JavaExec, dependsOn: classes) {
    main 'netty.HttpHelloWorldServer'
    classpath sourceSets.main.runtimeClasspath
    args '-jar', "$jar.archivePath", "8989"
    applicationDefaultJvmArgs = [
            " -agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5005"
    ]
    println "Load ENVIRONMENT : " + environment
    println "main.resources.srcDir : " + environment
}
task startServer(type: Exec, dependsOn: jar) {

    executable 'java'
    args '-jar', "$jar.archivePath", '8888'

}

applicationDefaultJvmArgs = [
        "-Denv=qa -Dlogback.configurationFile=System.properties['env']/logback.xml -agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5005"
]